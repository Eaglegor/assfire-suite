syntax = "proto3";

package assfire.routing.proto;

message Location {
	int32 latitude = 1;
	int32 longitude = 2;
}

message CoordinateFormat {
	message FixedPointInt {
		int32 precision = 1;
	}

	oneof instance {
		FixedPointInt fixed_point_int = 1;
	}
}

message RoutingOptions {
	
	message CrowflightRoutingOptions {
		double velocity = 1;
	}

	message EuclideanRoutingOptions {
		double velocity = 1;
	}

	message RandomRoutingOptions {
	}

	CoordinateFormat coordinates_format = 1;

	oneof instance {
		CrowflightRoutingOptions crowflight_routing_options = 2;
		EuclideanRoutingOptions euclidean_routing_options = 3;
		RandomRoutingOptions random_routing_options = 4;
	}
}

message SingleRouteRequest {
	Location from = 1;
	Location to = 2;
	RoutingOptions options = 3;
}

message ManyToManyRoutesRequest {
	repeated Location origins = 1;
	repeated Location destinations = 2;
	RoutingOptions options = 3;
}

message RouteInfo {
	Location origin = 1;
	Location destination = 2;
	int32 duration = 3;
	float distance = 4;
}

service RoutesProvider {
	rpc GetSingleRoute(SingleRouteRequest) returns (RouteInfo) {}
	rpc GetRoutesBatch(ManyToManyRoutesRequest) returns (stream RouteInfo) {}
	rpc GetStreamingRoutesBatch(stream ManyToManyRoutesRequest) returns (stream RouteInfo) {}
}