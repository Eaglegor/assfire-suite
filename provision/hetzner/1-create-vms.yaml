---
- name: Provision VMs using Terraform
  hosts: localhost
  connection: local
  vars:
    hcloud_token: !vault |
                  $ANSIBLE_VAULT;1.1;AES256
                  65613434396166323135356561656438396135396164313262393634393039616430333364666663
                  3765333633353564303665643734393863363639343462630a663237646336636432383566663833
                  37383266316430616232353636323539336461343562316236663133323435323633303861623266
                  6565356663633037640a336535343931623064323161666632643330313331373130646332386563
                  65356239623738386233323931383265383836343936653938643138616134646363633161306530
                  66633933363866366666393133626339333138383234636236363162346235316165663737626333
                  66643166313963383535396264373464643535306138393531623636303937663237386336626566
                  33323934376434613033
  tasks:
    - name: Run terraform
      terraform:
          project_path: "{{playbook_dir}}/terraform"
          state: present
      environment:
          TF_VAR_hcloud_token: "{{hcloud_token}}"
    - name: Refresh ansible inventory
      meta: refresh_inventory

- name: Wait until all nodes are up
  hosts: k8s-cluster
  gather_facts: no
  tasks:
      - name: Waiting until host is up
        wait_for_connection:
        
- name: Add floating IP configs to ingress nodes
  hosts: ingress
  tasks:
    - name: Create configuration
      template:
        src: "{{playbook_dir}}/floating_ip.tmpl"
        dest: "/etc/sysconfig/network-scripts/ifcfg-eth0:1"
    - name: Restart network
      service:
        name: network
        state: restarted