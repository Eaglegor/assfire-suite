syntax = "proto3";

package assfire.api.v1.service.scheduler.transport;
option go_package = "assfire.org/api/v1/service/scheduler/transport";

import "assfire/api/v1/model/optimization/transport/transport.proto";
import "assfire/api/v1/model/routing/routing.proto";
import "google/api/annotations.proto";

enum WaybillSchedulingAlgorithm {
  WAYBILL_SCHEDULING_ALGORITHM_UNSPECIFIED = 0;
  WAYBILL_SCHEDULING_ALGORITHM_LINEAR = 1;
  WAYBILL_SCHEDULING_ALGORITHM_BILINEAR = 2;
}

message WaybillAllocation {
  int32 job_id = 1;
  assfire.api.v1.model.optimization.transport.TimeWindow allocated_time = 2;
  assfire.api.v1.model.routing.RouteInfo route_to_next = 3;
}

message Waybill {
  repeated Allocation allocations = 1;
}

message ScheduleWaybillRequest {
  string request_id = 1;
  repeated assfire.api.v1.model.optimization.transport.Job jobs = 2;
  repeated assfire.api.v1.model.optimization.transport.WaybillAllocation allocations = 3;
  assfire.api.v1.model.optimization.transport.Resource resource = 4;
  WaybillSchedulingAlgorithm algorithm = 5;
}

message ScheduleWaybillResponse {
  message Status {
    enum Code {
      STATUS_CODE_UNSPECIFIED = 0;
      STATUS_CODE_OK = 1;
      STATUS_CODE_ERROR = 2;
    }
    Code code = 1;
    string message = 2;
  }
  Waybill waybill = 1;
  Status status = 2;
}

service SchedulerService {
  rpc ScheduleWaybill(ScheduleWaybillRequest) returns (ScheduleWaybillResponse) {
    option (google.api.http) = {
      get: "/v1/transport/waybill"
    };
  }
}