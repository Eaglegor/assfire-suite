apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: { { .Release.Namespace } }
  name: { { .Release.Name } }
  labels:
    assfire_app: { { .Release.Name } }-server
spec:
  replicas: {{.Values.replicas}}
  selector:
    matchLabels:
      assfire_app: { { .Release.Name } }-server
  template:
    metadata:
      labels:
        assfire_app: { { .Release.Name } }-server
    spec:
      nodeSelector:
        assfire_role: calculation-node
      containers:
        - name: router-server
          image: registry.gitlab.com/assfire/assfire-suite/assfire-router:@ASSFIRE_APPLICATION_RELEASE_VERSION@
          ports:
            - containerPort: 50051
            - containerPort: 8081
          command: ["assfire-router-server"]
          args: ["--redis-cache-enabled=true", "--redis-host=assfire-geocache-redis-master.redis.svc.cluster.local", "--metrics-enabled=true", "--log-level=info"]
        - name: router-grpc-gateway
          image: registry.gitlab.com/assfire/assfire-suite/assfire-router:@ASSFIRE_APPLICATION_RELEASE_VERSION@
          ports:
            - containerPort: 8082
          command: [ "assfire-router-grpc-gateway" ]
        - name: router-maptest
          image: registry.gitlab.com/assfire/assfire-suite/assfire-router-maptest:@ASSFIRE_APPLICATION_RELEASE_VERSION@
          ports:
            - containerPort: 8083
      imagePullSecrets:
        - name: assfire-registry-key