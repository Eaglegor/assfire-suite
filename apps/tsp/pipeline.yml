stages:
  - build
  - test
  - rpm
  - docker
  - publish
  - deploy

variables:
  CMAKE_OPTIONS: |
    -DASSFIRE_APPLICATION_RELEASE_VERSION=$APPLICATION_VERSION
    -DASSFIRE_DEBUG_MODE=OFF
    -DCMAKE_BUILD_TYPE=Release
    -DASSFIRE_GENERATE_GRPC_GATEWAYS=True
    -DASSFIRE_APPS_BUILD_ALL=OFF
    -DASSFIRE_APPS_BUILD_TSP=ON
    -DASSFIRE_APPS_BUILD_SCHEDULER=ON
    -DASSFIRE_APPS_BUILD_ROUTER=ON
  SERVER_IMAGE_NAME: assfire-tsp-server
  WORKER_IMAGE_NAME: assfire-tsp-worker

.configure:
  before_script:
    - mkdir out
    - cd out
    - cmake -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" $CMAKE_OPTIONS ../
    - cd ..

build:
  extends: .configure
  stage: build
  image: $BUILD_IMAGE_NAME
  artifacts:
    paths:
      - out/*
    expire_in: 1 hour
  script:
    - cd out
    - make -j

test:
  image: $BUILD_IMAGE_NAME
  stage: test
  script:
    - cd out
    - make test
  dependencies:
    - build
  needs:
    - build

helm-lint:
  image: $BUILD_IMAGE_NAME
  stage: test
  script:
    - cd out/apps/tsp/helm/assfire-tsp
    - helm lint .

rpm:
  image: $BUILD_IMAGE_NAME
  stage: rpm
  artifacts:
    paths:
      - out/*.rpm
  dependencies:
    - build
  needs:
    - build
  script:
    - cd out
    - cmake -DASSFIRE_PACKAGE_BUILD_RPM=ON $CMAKE_OPTIONS ../
    - make package

docker-server:
  image: docker:stable
  services:
    - docker:dind
  variables:
    IMAGE_TAG_NAME: latest
  stage: docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build out -f out/apps/tsp/Dockerfile -t $CI_REGISTRY/assfire/assfire-suite/${SERVER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME
    - docker push $CI_REGISTRY/assfire/assfire-suite/${SERVER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME
  dependencies:
    - build
    - rpm
  needs:
    - build
    - test
    - rpm

docker-server-push:
  image: docker:stable
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY/assfire/assfire-suite/${SERVER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME
    - docker tag $CI_REGISTRY/assfire/assfire-suite/${SERVER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME $CI_REGISTRY/assfire/assfire-suite/${SERVER_IMAGE_NAME}:${APPLICATION_VERSION}
    - docker push $CI_REGISTRY/assfire/assfire-suite/${SERVER_IMAGE_NAME}:${APPLICATION_VERSION}
  only:
    refs:
      - tags
  needs:
    - docker-server

docker-worker:
  image: docker:stable
  services:
    - docker:dind
  variables:
    IMAGE_TAG_NAME: latest
  stage: docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build out -f out/apps/tsp/worker/Dockerfile -t $CI_REGISTRY/assfire/assfire-suite/${WORKER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME
    - docker push $CI_REGISTRY/assfire/assfire-suite/${WORKER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME
  dependencies:
    - build
    - rpm
  needs:
    - build
    - test
    - rpm

docker-worker-push:
  image: docker:stable
  services:
    - docker:dind
  stage: publish
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY/assfire/assfire-suite/${WORKER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME
    - docker tag $CI_REGISTRY/assfire/assfire-suite/${WORKER_IMAGE_NAME}:$TEMP_IMAGE_TAG_NAME $CI_REGISTRY/assfire/assfire-suite/${WORKER_IMAGE_NAME}:${APPLICATION_VERSION}
    - docker push $CI_REGISTRY/assfire/assfire-suite/${WORKER_IMAGE_NAME}:${APPLICATION_VERSION}
  only:
    refs:
      - tags
  needs:
    - docker-worker

helm:
  image: $BUILD_IMAGE_NAME
  stage: publish
  only:
    - tags
  script:
    - cd out/apps/tsp/helm/assfire-tsp/
    - helm package .
    - curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@assfire-tsp-${APPLICATION_VERSION}.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"
  dependencies:
    - build
  needs:
    - build
    - docker-server
    - docker-worker

deploy:
  only:
    - tags
  when: manual
  tags:
    - assfire-deployment-node
  stage:
    deploy
  script:
    - helm repo add --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD assfire-suite ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable
    - helm upgrade -i assfire-tsp -n assfire assfire-tsp
  dependencies:
    - docker-server-push
    - docker-worker-push
    - helm
  needs:
    - docker-server-push
    - docker-worker-push
    - helm