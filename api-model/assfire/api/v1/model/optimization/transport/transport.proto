syntax = "proto3";

package assfire.api.v1.model.optimization.transport;
option go_package = "assfire.org/api/v1/model/optimization/transport";

import "assfire/api/v1/model/routing/routing.proto";

message TimeWindow {
  int32 start_time = 1;
  int32 end_time = 2;
}

message Job {
  assfire.api.v1.model.routing.Location location = 1;
  int32 id = 2;
  repeated TimeWindow time_windows = 3;
}

message Waypoint {
  Job job = 1;
}

enum CostFunctionType {
  COST_FUNCTION_TYPE_UNSPECIFIED = 0;
  COST_FUNCTION_TYPE_DISTANCE = 1;
  COST_FUNCTION_TYPE_DURATION = 2;
  COST_FUNCTION_TYPE_TRANSPORTATION_COSTS = 3;
}

message ResourceUsageCosts {
  double distance_unit_cost = 1;
  double time_unit_cost = 2;
}

message CostFunction {
  CostFunctionType type = 1;
  ResourceUsageCosts resource_usage_costs = 2;
}

message Resource {
  assfire.api.v1.model.routing.RoutingOptions routing_options = 1;
  int32 id = 2;
  CostFunction cost_function = 3;
}

message TransportationCosts {
  int64 distance = 1;
  int64 duration = 2;
  double cost = 3;
}
